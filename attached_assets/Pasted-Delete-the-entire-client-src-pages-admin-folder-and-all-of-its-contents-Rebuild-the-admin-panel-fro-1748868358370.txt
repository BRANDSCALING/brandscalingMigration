Delete the entire client/src/pages/admin folder and all of its contents. Rebuild the admin panel from scratch using React, TypeScript, and Tailwind CSS without using any placeholder or dummy data. Create a new folder structure: client/src/pages/admin/ with index.tsx, layout.tsx, a components folder with AdminHeader.tsx and AdminSidebar.tsx, and a pages folder with Dashboard.tsx, Users.tsx, Posts.tsx, and Insights.tsx. The layout should use a full-screen flex container (h-screen w-screen) with overflow-hidden only at the outermost level. The sidebar must be responsive: collapsible on mobile, pinned on desktop, and built in AdminSidebar.tsx. The header should be sticky at the top, live inside AdminHeader.tsx, and trigger the sidebar toggle on mobile using a stateful burger menu. In layout.tsx, wrap the sidebar and main content area using flex flex-1 min-h-0. The main content area must use overflow-y-auto flex-1 min-h-0 p-6 bg-gray-50 to ensure scrolling works and content fills remaining height. Do not use h-full on any internal divs that conflict with scroll logic. Avoid any placeholder text, cards, or fake data. For all page files (Dashboard.tsx, etc.), create minimal functional components that return empty page containers using valid Tailwind spacing classes like space-y-4 but do not add any mock content inside. In index.tsx, render the correct page based on window.location.pathname: render Dashboard for /admin, Users for /admin/users, Posts for /admin/posts, and Insights for /admin/insights. Ensure the entire layout loads correctly, header stays fixed, sidebar functions responsively, and all page content scrolls properly with no overflow bugs. All code must be clean, modular, and scroll-tested with no dummy UI or filler content.

⸻

✅ This is the correct prompt.
No dummy text. No broken structure. Fully rebuilds and scroll-tests the panel.
You can paste this as-is into Replit AI.

Would you like a backup copy of the folder structure and file scaffold to compare what it builds?